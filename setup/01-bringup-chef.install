#!/bin/bash

## only do this on real installs.
[[  -d /tftpboot/ubuntu_dvd/dell/Version || \
    -d /tftpboot/redhat_dvd/dell/Version || \
    -d /opt/dell/barclamps/crowbar ]] || \
    { echo "Not an admin node, not installing Chef"; exit 0; }


ensure_service_running () {
    service="$1"
    regexp="${2:-running}"
    if service $service status | egrep -q "$regexp"; then
        echo "$service is already running - no need to start."
    else
        service $service start
    fi
}

die() {
    echo "$(date '+%F %T %z'): $@"
    exit 1
}


service chef-client stop

if [[ -f /etc/redhat-release || -f /etc/centos-release ]]; then
    OS=redhat
elif [[ -d /etc/apt ]]; then
    OS=ubuntu
elif [[ -f /etc/SuSE-release ]]; then
    OS=suse
else
    die "Staged on to unknown OS media!"
fi

if [[ $OS = ubuntu || $OS = redhat ]]; then
    # Set up initial config
    chef-server-ctl reconfigure
    mkdir -p /etc/chef-server
    # Customize to match what the rest of Crowbar expects.
    if [[ ! -f /etc/chef-server/chef-server.rb ]]; then
        cat >/etc/chef-server/chef-server.rb <<EOF
# chef-server settings.
erchef["listen"]="0.0.0.0"
erchef["port"]=4000
erchef["url"]="http://0.0.0.0:4000"
erchef["web_ui_client_name"]="chef-webui"
chef_server_webui['port']=4040
chef_server_webui['url']="http://0.0.0.0:4040"
chef_server_webui['listen']="0.0.0.0:4040"
EOF
        # Reconfigure chef-server to match what we expect.
        chef-server-ctl reconfigure
        chef-server-ctl test || {
            echo "Could not bring up valid chef server!"
            exit 1
        }
    fi
    mkdir -p /etc/chef
    ln -s /etc/chef-server/chef-webui.pem /etc/chef/webui.pem
    ln -s /etc/chef-server/chef-validator.pem /etc/chef/validation.pem
elif [[ $OS = suse ]]; then
    # Default password in chef webui to password
    sed -i 's/web_ui_admin_default_password ".*"/web_ui_admin_default_password "password"/' \
        /etc/chef/webui.rb
    chkconfig rabbitmq-server on
    if ! rabbitmqctl status > /dev/null 2>&1; then
	echo "RabbitMQ not running. Starting..."
	chkconfig rabbitmq-server on
	ensure_service_running rabbitmq-server || \
            die "Cannot start rabbitmq-server. Aborting."
        sleep 5
    fi
    rabbitmqctl list_vhosts | grep -q '^/chef' || \
        rabbitmqctl add_vhost /chef || \
        die "Could not create default rabbitmq Chef vhost"
    rabbitmqctl list_users | grep -q chef || {
        rabbitmqctl add_user chef "$rabbit_chef_password"
        # Update "amqp_pass" in  /etc/chef/server.rb and solr.rb
        sed -i 's/amqp_pass ".*"/amqp_pass "'"$rabbit_chef_password"'"/' /etc/chef/{server,solr}.rb
    } || die "Could not create rabbitmq Chef user"
    rabbitmqctl list_permissions |grep -q chef || \
	rabbitmqctl set_permissions -p /chef chef ".*" ".*" ".*" || \
        die "Could not set proper rabbitmq Chef permissions."
    echo "Starting CouchDB..."
    chkconfig couchdb on
    ensure_service_running couchdb

    services='solr expander server server-webui'
    for service in $services; do
        chkconfig chef-${service} on
    done

    for service in $services; do
        ensure_service_running chef-${service}
    done

    # chef-server-webui won't start if /etc/chef/webui.pem doesn't exist, which
    # may be the case (chef-server generates it if not present, and if the webui
    # starts too soon, it won't be there yet).
    for ((x=1; x<6; x++)); do
        sleep 10
        service chef-server-webui status >/dev/null && { chef_webui_running=true; break; }
        service chef-server-webui start
    done
    if [[ ! $chef_webui_running ]]; then
        echo "WARNING: unable to start chef-server-webui"
    fi
    perl -i -pe 's{<maxFieldLength>.*</maxFieldLength>}{<maxFieldLength>200000</maxFieldLength>}' /var/lib/chef/solr/conf/solrconfig.xml

    service chef-solr restart
fi

if [[ ! -e ~/.chef/knife.rb ]]; then
    yes '' | knife configure -i
    knife configure client ~/.chef
fi

if [[ ! -e /home/crowbar/.chef/knife.rb ]]; then
    mkdir /home/crowbar/.chef
    EDITOR=/bin/true knife client create crowbar -a --file /home/crowbar/.chef/crowbar.pem
    chown -R crowbar: /home/crowbar/.chef/
    yes '' | sudo -u crowbar -H -- knife configure -y -u crowbar
fi

chef-client
